%section.container_wrapper
  %section.columns.clearfix
    = render "header_calendar", path: daily_path(calendar_id: params[:calendar_id])
  %section.columns.clearfix
    %section.column.col-34
      %section.calender_month
        %table.month_title{border: "0", cellpadding: "0", cellspacing: "0", width: "98%"}
          %tr
            %td{height: "30", valign: "middle"}
              = link_to image_tag("arrow_l_gray@2x.png", size: "18x18", alt: "arrow_l_gray"), daily_path(@date.prev_day)
            %td{align: "center", height: "30", valign: "middle"}
              = @date.strftime('%A, %B %d, %Y')
            %td{align: "right", height: "30", valign: "middle"}
              = link_to image_tag("arrow_r_gray@2x.png", size: "18x18", alt: "arrow_l_gray"), daily_path(@date.next)
        .calendar_day
          .day_time
            .day_time_head Time
            - TIME.each do |t|
              .day_time_bot
                - [nil,15,30,45].each_with_index do |m,index|
                  - time = m.nil? ? "#{t.to_i}:#{'00'}#{t[-2,2]}" : "#{t.to_i}:#{m}#{t[-2,2]}"
                  - if @synced_cal.nil? || @synced_cal && @synced_cal.working_hours_check?(set_time(time))
                    = m.nil? ? t : "#{t.to_i}:#{m}"
            .clear
          .day_event
            .day_event_head
              %div
                - if @cal_name.eql? "All"
                  = "#{@cal_name} Calendars"
                - else
                  = "#{@cal_name} Calendar"
            .week_event_bot
              - TIME.each do |t|
                .day_event_wrap
                  - [nil,15,30,45].each_with_index do |m,index|
                    - a = ""
                    - am_pm = t[-2,2]
                    - time = m.nil? ? "#{t.to_i}:#{'00'}#{am_pm}" : "#{t.to_i}:#{m}#{am_pm}"
                    - rec_back = false
                    - rec_v, rec_path = ""
                    - appointments_cal = []
                    - curr_date = "#{@day}-#{@month}-#{@year} #{time}".to_time
                    - if @synced_cal.nil? || @synced_cal && @synced_cal.working_hours_check?(set_time(time))
                      - find_calendars(@calendar_id).each do |calendar|
                        - appointments = calendar.appointments.where(repeat: false)
                        - res_appointments_cal = appointments.where("CONVERT_TZ(start_at,'+00:00', '#{ActiveSupport::TimeZone.new(calendar.timezone.to_s).to_s[4,6]}') = ? or (CONVERT_TZ(start_at,'+00:00', '#{ActiveSupport::TimeZone.new(calendar.timezone.to_s).to_s[4,6]}') < ? and CONVERT_TZ(end_at,'+00:00', '#{ActiveSupport::TimeZone.new(calendar.timezone.to_s).to_s[4,6]}') > ?)", curr_date, curr_date, curr_date)
                        - appointments_cal << res_appointments_cal if res_appointments_cal.present?
                      - if @r_hash[curr_date.to_date.to_s]
                        - @r_hash[curr_date.to_date.to_s].each do |k,v|
                          - cal_timezone = Appointment.find(k).calendar.timezone.to_s
                          - a = curr_date.to_date - v['start_time'].to_date
                          - revised_start_time = v['start_time'] + a.to_s.split("/")[0].to_i.days
                          - revised_end_time = v['end_time'] + a.to_s.split("/")[0].to_i.days
                          - if Time.parse("0000-01-01 #{curr_date.strftime("%H:%M")}") >= Time.parse("0000-01-01 #{(revised_start_time.utc+ActiveSupport::TimeZone.new(cal_timezone.to_s).utc_offset).strftime("%H:%M")}") && Time.parse("0000-01-01 #{curr_date.strftime("%H:%M")}") < Time.parse("0000-01-01 #{(revised_end_time.utc+ActiveSupport::TimeZone.new(cal_timezone.to_s).utc_offset).strftime("%H:%M")}")
                            - rec_back = true
                            - rec_v = v
                      - if @synced_cal.nil? || @synced_cal && @synced_cal.include_in_working_days?(@date.strftime('%a').upcase)
                        = link_to new_appointment_path+"?day="+@day.to_s+"&month="+@month.to_s+"&year="+@date.year.to_s+"&time="+time+"&type=daily", :class => "fancybox.ajax fancybox" do
                          .day_event_row{id: "cal_cell_#{@day.to_s}_#{@month.to_s}_#{time.gsub(':','_')}", "data-popup" => 'appointment_details', class: "#{m.eql?(45) ? '' : 'border_bottom_gray'}", style: "content:''; background-color:#{'#E8E5E5' if (appointments_cal.present? || rec_back)}"}
                        - if rec_back  
                          %div{class: "existingEvent_#{m}"}
                            - @r_hash[curr_date.to_date.to_s].each do |k,v|
                              - rec_v = v
                              - rec_path = k
                              - revised_start_time = v['start_time']+a.to_s.split("/")[0].to_i.days
                              - revised_end_time = v['end_time']+a.to_s.split("/")[0].to_i.days
                              = render partial: 'appointment_daily_recurring', locals: {time: time, type: 'daily', curr_date: curr_date, rec_v: rec_v, rec_path: rec_path}
                        %div{class: "existingEvent_#{m}"}
                          = render partial: 'appointment_daily', locals: {time: time, type: 'daily', appointments_cal: appointments_cal, curr_date: curr_date, rec_v: rec_v, rec_path: rec_path}
                      - else
                        .day_event_row
                        %div{class: "existingEvent_#{m}"}
              .clear
          .clear
        .clear
    = render :partial => "right_calendar", locals: {calendars: @calendars}